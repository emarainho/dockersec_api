openapi: 3.0.0

info:
  version: '1.0.0'
  title: 'DockerSec Tool - API'
  description: 'API to enable Container Security in CI/CD Pipelines'
  
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ema.rainho/dockersec_api/1.0.0

paths:
  /health:
    get:
      summary: Returns the API health status
      responses:
         '200':
          description: API Health Status response (up/down)
          content:
            application/json:
              schema:
                type: object
                properties:
                  api_status:
                    type: string

  /version:
    get:
      summary: Returns the API version
      responses:
         '200':
          description: API version number response
          content:
            application/yaml:
              schema:
                type: object
                properties:
                  api_version:
                    type: integer

  /analysis/create:
    post:
      summary: Create a new Analysis according to the uploaded definition
      requestBody:
        content:
          application/octet-stream:
            schema:
              # docker-sec.yaml definition 3to upload.
              type: string
              format: binary
      responses:
        '400':
          description: The specified analyis ID is invalid (e.g. not a number)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: A analyis with the specified ID was not found
        '200':
          description: returns new analysis name, ID and accepted code
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysis_id:
                    type: integer
                  analysis_name:
                    type: string
                  accepted:
                    type: boolean

  /analysis/{analysisId}/abort:
    get:
      summary: Abort a analysis by ID
      parameters:
        - name: analysisId
          in: path
          required: true
          description: The ID of the analysis to abort
          schema:
            type: integer
      responses:
        '200':
          description: OK

  /analysis/{analysisId}/progress:
    get:
      summary: Progress of an analysis by ID
      parameters:
        - name: analysisId
          in: path
          required: true
          description: The Progress of Analysis Steps/Stages 1,2,3 and tool tasks (return status and tasks/stages IDs)
          schema:
            type: integer
      responses:
        '200':
          description: Analysis progress response
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysis_id:
                    type: integer
                  analysis_name:
                    type: string
                  # number of steps/stages are configurable in docker-sec.yaml
                  step1_id:
                    type: integer
                  step1_status:
                    type: string
                  step2_id:
                    type: integer
                  step2_status:
                    type: string
                  step3_id:
                    type: integer
                  step3_status:
                    type: string
                  # last step in analysis
                  laststep_id:
                    type: integer
                  laststep_name:
                    type: integer

  /analysis/{analysisId}/step/{stepId}/tasks:
    get:
      summary: Returns a task by ID
      parameters:
        - name: analysisId
          in: path
          required: true
          description: The ID of the Step to retrieve tasks
          schema:
            type: integer
        - name: stepId
          in: path
          required: true
          description: The ID of the task to return
          schema:
            type: integer
      responses:
        '200':
          description: returns analysis, steps and tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  step_id:
                    type: integer
                  step_name:
                    type: string
                  # todo: change to array
                  task_list:
                    type: string

  /analysis/{analysisId}/results:
    get:
      summary: Returns results status of Analysis (can include report if complete)
      parameters:
        - name: analysisId
          in: path
          required: true
          description: The ID of the analysis
          schema:
            type: integer
      responses:
         '200':
          description: Analysis Status response (can include Report results if finished)
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysis_id:
                    type: integer
                  analysis_status:
                    type: string
                  report_id:
                    type: integer
                  report_results:
                    type: object

  /tools/create:
    post:
      summary: Create a new Tool according to the uploaded definition
      requestBody:
        content:
          application/octet-stream:
            schema:
              # Dockerfile to upload.
              type: string
              format: binary
      responses:
        '400':
          description: The specified tool ID is invalid (e.g. not a number)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: A tool with the specified ID was not found
        '200':
          description: returns new tool name, ID and accepted code
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysis_id:
                    type: integer
                  analysis_name:
                    type: string
                  accepted:
                    type: boolean


  /tools/list:
    get:
      summary: Collect available security tools
      responses:
        '200':
          description: list of security tools
          content:
            application/json:
              schema:
                type: object
                properties:
                  tool_id:
                    type: integer
                  tool_name:
                    type: string
                  tool_type:
                    type: string
                  tool_definition:
                    type: string

  /tools/{toolId}/details:
    get:
      summary: Returns details of specific Security Tool
      parameters:
        - name: toolId
          in: path
          required: true
          description: The ID of the tool
          schema:
            type: integer
      responses:
         '200':
          description: The Dockerfile of the Security Tool with identified by toolId
          content:
            application/json:
              schema:
                type: object
                properties:
                  tool_id:
                    type: integer
                  tool_name:
                    type: string
                  tool_status:
                    type: string
                  dockerfile_id:
                    type: integer
                  dockerfile_dump:
                    type: object

components:
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    Schema:
      type: object
      properties:
        id:
          type: integer
          format: int64